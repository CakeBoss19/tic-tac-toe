*, *::after, *::before {  /*Essentially targets everything.*/
  box-sizing: border-box; /*Makes styling widths and heights much easier*/
}

/*Create custom variable to re-use throught the code */
:root {
  --cell-size: 100px;
  --mark-size: calc(var(--cell-size) * .9);  /*Ensures sizes of cell CONTENT is slightly smaller than cell size*/
}

form {
  position: absolute;
  width: 100%;
  height: 15%;
  text-align: center;
  align-content: center;
  justify-content: center;
}
ul {
  list-style: none;
  gap: 15px;
}

/* Defines grid/cell size and centers */

.board {
  width: 100vw;
  height: 100vh;
  display: grid;
  justify-content: center; 
  align-content: center;  /*^^Centers the board to the middle of the page^^*/
  justify-items: center;
  align-items: center;  /*^^Centers the contents inside of the cells^^*/
  grid-template-columns: repeat(3, auto);
}

#start-game{
  justify-content: center; 
  align-content: center;  /*^^Centers the board to the middle of the page^^*/
  justify-items: center;
  align-items: center; 
}

.cell{
  width: var(--cell-size);
  height: var(--cell-size);
  border: 1px solid black;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  cursor: pointer;
}

 
/* Targets all the outer walls and deletes them */
.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3) {
  border-top: none;
}

.cell:first-child,
.cell:nth-child(4),
.cell:nth-child(7) {
  border-left: none;
}

.cell:nth-child(7),
.cell:nth-child(8),
.cell:nth-child(9) {
  border-bottom: none;
}

.cell:nth-child(3),
.cell:nth-child(6),
.cell:nth-child(9) {
  border-right: none;
}

/* element:not((class)) makes sure that if it has a certain class, the code will omit the element */

/* Creates X and O symbols without the need for actual text*/
.cell.x::after,
.cell.x::before,
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after{
   content: ''; /*Ensures the content renders */
   width: calc(var(--mark-size) * .15);
   height: var(--mark-size);
   position: absolute;
}


.cell.x::after,
.cell.x::before,
.cell.circle::after,
.cell.circle::before{
  background-color: black;
}

.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after,
.board.circle .cell:not(.x):not(.circle):hover::before,
.board.circle .cell:not(.x):not(.circle):hover::after {
  background-color: lightgray;
}


/* Rotates in opposite directions to form an X */
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::after{
  transform: rotate(45deg);
}

.cell.x::before,
.board.x .cell:not(.x):not(.circle):hover:before {
  transform: rotate(-45deg);
}

/* Ensures user cannot reselect an already selected cell */
.cell.x,
.cell.circle{
  cursor: not-allowed;
}


.cell.circle::after,
.cell.circle::before,
.board.circle .cell:not(.x):not(.circle):hover::before,
.board.circle .cell:not(.x):not(.circle):hover::after{
   content: ''; /*Ensures the content renders */
   width: var(--mark-size);
   height: var(--mark-size);
   position: absolute;
   border-radius: 50%;
}


.cell.circle::before,
.board.circle .cell:not(.x):not(.circle):hover::before {
  width: var(--mark-size);
  height: var(--mark-size);
}

.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::after {
  width: calc(var(--mark-size) * .7);
  height: calc(var(--mark-size) * .7);
  background-color: white;
}

#winning-screen{
  background-color: rgba(0, 0, 0, 0.274);
  width: 100vw;
  height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  position: absolute;
  gap: 25px;
}

#winning-screen h1{
  background-color: rgba(0, 0, 0, 0.685);
  color: white;
  text-align: center;
  width: 100%;
}

#reset-button{
  width: fit-content;
  font-size: 25px;
}

.congratulations{
  scale: 2;
}

.invisible{
  visibility: hidden;
}